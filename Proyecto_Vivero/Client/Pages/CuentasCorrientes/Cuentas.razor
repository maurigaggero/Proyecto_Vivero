@page "/cuentas"
@inject HttpClient Http
@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]

@inject IJSRuntime JS

@using Proyecto_Vivero.Shared

<div class="form-group row m-1">
    <div class="input-group">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-default"><b>Cliente</b></span>
        </div>
        <select @bind="@idcliente" class="form-control">
            <option selected value="0">Seleccione cliente</option>
            @foreach (var cliente in clientes)
            {
                <option value="@cliente.Id">@cliente.NombreyApellido | DNI:@cliente.Dni</option>
            }
        </select>
        <div class="input-group-append">
            <button @onclick="@(() => VerCuenta(idcliente))" class="btn btn-primary">
                <text style="color:white"> Seleccionar</text>
            </button>
        </div>
    </div>
</div>

<table class="table table-hover">
    <thead class="thead-dark">
        <tr>
            <th></th>
            <th>#</th>
            <th>Fecha</th>
            <th>Comprobante</th>
            <th>Concepto</th>
            <th>Importe</th>
            <th>Saldo Parcial</th>
        </tr>
    </thead>
    <tbody>
        <Virtualize Items="@cuentas" Context="cuenta">
            <tr @key="cuenta.Id">
                <td></td>
                <td>@cuenta.Id</td>
                <td>@cuenta.Fecha</td>
                <td>
                    @if (cuenta.PagoId == null)
                    {
                        <a href="ver-venta/@cuenta.VentaId" class="btn btn-sm btn-primary">Ver</a>
                    }
                    @if (cuenta.VentaId == null)
                    {
                        <a href="ver-pago/@cuenta.PagoId" class="btn btn-sm btn-primary">Ver</a>
                    }
                </td>
                <td>@cuenta.Concepto</td>
                <td>@cuenta.Importe</td>
                <td>@cuenta.Saldo_Parcial</td>
            </tr>
        </Virtualize>
    </tbody>
</table>

@code {
    public List<Cliente> clientes { get; set; } = new List<Cliente>();

    public List<CuentaCorriente> cuentas { get; set; } = new List<CuentaCorriente>();

    public int idcliente { get; set; } = -1;

    protected async override Task OnInitializedAsync()
    {
        clientes = await Http.GetFromJsonAsync<List<Cliente>>($"api/clientes");
        cuentas = await Http.GetFromJsonAsync<List<CuentaCorriente>>($"api/cuentascorrientes");
    }

    async Task VerCuenta(int idcliente)
    {
        if (idcliente == 0)
        {
            await JS.InvokeVoidAsync("simple", "Error", "Seleccione cliente", "error");
        }
        else if (idcliente == -1)
        {
            await JS.InvokeVoidAsync("simple", "Error", "Seleccione cliente", "error");
        }
        else
        {
            cuentas = await Http.GetFromJsonAsync<List<CuentaCorriente>>($"api/cuentascorrientes/porcliente/{idcliente}");
        }
    }
}
